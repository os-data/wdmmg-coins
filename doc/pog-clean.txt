Design notes for Program Object Groups cleanser

David Jones, Open Knowledge Foundation & Ravenbrook Limited

INTRODUCTION

This document records some design notes for the effort to clean the
Program Object Group (POG) and Program Object (PO) data that has
been made available from the HM Treasury via an FOI request.

Open Knowledge Foundation wish to translate this data into machine
readable format so that it can be used by Where Does My Money Go, and
make it available to anyone else who wishes to use it.  We are intending
to use a largely mechanical approach (that is, a computer program).

The readership of this document is anyone wishing to understand the
program.

This document is not confidential.


SOURCE

The main source is the result of an FOI request.  This was delivered in
paper form, and Lisa Evans has scanned and OCR'ed.  The results of the
OCR are here: http://www.archive.org/details/PogAndPo_138

See also trace ticket 360 (and to a lesser extent, 312):
http://knowledgeforge.net/okfn/tasks/ticket/360

The image files from the scan are not generally available, but a few
images to illustrate the general nature of the original paper documents are
referenced from the trac ticket.


DATA DESCRIPTION

Each POG is generally divided into a small number (dozen or so) of POs.
POGs are aggregated; several POGs will share the same 3 character
prefix, the Programme Object Prefix ([COINS 2010-02-23]).  Example:
"P01 PO Department for Children, 5chools and Families".

And sometimes there are intermediate groupings.  See "P08Main" on page
43.

Each POG and PO has an identifier that typically looks like this:

POG: P01 S100101
PO: P0110001

PO has some oddball cases:
P06FSS1 [7 chars]
PCX600000 [9 chars]

And so does POG:
P04110302 [9 chars]

POG codes do not always start P number number, page 220 has several that
start PIX.

PO Prefixes all have a description that starts "PO", and all but one of
them (the first one, P01) use "PO" as the parent.

Hmm.  Or have I got this the wrong way round, is PO the grouping of
POGs? (No, Lisa says the Program Objects are contained within POGs).

POG codes are available in machine readable form in a spreadsheet
reference from trac 360:
http://spreadsheets.google.com/ccc?key=0AhkFVPcNaYlxdHRMTXo5VWdsRUp1OThlNFc2cnlUM0E&hl=en

This can be used as a check on the parsed output: The POG codes should
match.  Discrepencices investigated.




SCANNING TACTICS


Scanning artefacts:
  - may mutate the S into a 5 (S100101 becomes 5100101);
  - reduce the space (between the 3 character code and a subsequent 7
    character code).

Generally POG codes are "Pxx Sxxxxxx".  On Page 103 there is a POG of
the form: P23IFFI2 (and P23IFFI on the previous page).

POG versus PO.  Ignoring the space, a POG code is 10 characters, a PO
code is 8.  So it should be possible to use this to easily tell the
differences between those two levels of the hierarchy.

Four .txt documents do not match r'^Code' for the first line:

122.txt
219.txt
316.txt
347.txt

219.txt and 347.txt are totally borked (encoding error?).  219 and 347
were scanned upside down (oops).

Pages end with a page number (equal to filename).

Spurious junk appears bottom of Page 8, top of page 13.

Page 3 has a spurious . on its own before the line number.

Page 15 appears to have been OCR'd twice with the results concatenated.

Many files have short lines of junk: '.', '..', 'p'.

Soem lines start with spurious junk: '.', 'to', ';'. "'.", "J'\"'", 'j'
[coded] And more: '00'

Several PO Prefixes on page 23 are "PO?", probably P07.  Also page 30,
page 39. [coded]

Note "O?" is probably "07"

page 35. a few lines are completely junked.  Mysterious. Page 50.

A '1' is quite frequently followed by a spurious space in the OCR.
Currently severely affects page 71 and following. [coded]  Current code
doesn't fix "PIXDP01 L" correctly (page 207).

Spurious line break on Page 35 "P0711648".

Lower case: page 282

Some very special cases: IPWA4180F should be PWA4180F

Bug? Why isn't the dot removed properly for ". PSXDFDF6". (page 227)?


REDUNDANCIES AND CHECKS

Lisa Evans says:

POG Code always starts description (but PO Descriptions do not)

Programme Object Prefixes always have a parent column which is PO (these
are the descriptions). Except P01.

REFERENCES

[COINS 2010-02-23] "Coins Training and Basic Reports",
  http://www.whatdotheyknow.com/request/programme_objects_from_the_coins#incoming-78133
